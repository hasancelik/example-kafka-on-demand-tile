---
label: Kafka
description: Kafka example service
icon_image: AAAA
minimum_version_for_upgrade: "0.1.0" # Why? What?
rank: 50
# service_broker: true   # To avoid bosh director redeployments

post_deploy_errands:
- name: push_and_register_service_broker
- name: smoke_tests

pre_delete_errands:
- name: delete_and_unregister_service_broker

form_types:
- name: plans_form
  label: On-Demand Plans
  description: Kafka-ODB plans
  property_inputs:
  - reference: .broker.plan_name
    label: Plan name
    description: Name of the only plan.
  - reference: .broker.plan_description
    label: Plan description
    description: Description of the only plan
  - reference: .broker.kafka_broker_instances
    label: Kafka instances
    description: No. of Kafka instances
  - reference: .broker.kafka_broker_vm_type
    label: Kafka VM type
    description: Type for Kafka VM
  - reference: .broker.kafka_broker_disk_type
    label: Kafka Disk type
    description: Type for Kafka disk
  - reference: .broker.zookeeper_server_instances
    label: Zookeeper server instances
    description: No. of Zookeeper instances
  - reference: .broker.zookeeper_server_vm_type
    label: Zookeeper VM type
    description: Type for Zookeeper VMs
  - reference: .broker.zookeeper_server_disk_type
    label: Zookeeper disk type
    description: Type for Zookeeper disks
  - reference: .broker.auto_create_topics
    label: Auto-create topics
    description: Create topics when not present
  - reference: .broker.default_replication_factor
    label: Default replication factor
    description: The Kafka replication factor for a topic when not explicitly specified at topic creation time
- name: syslog
  label: Syslog (Classic)
  description: "Forwards syslog messages via UDP to a syslog server"
  property_inputs:
  - reference: .properties.syslog_address
    label: Syslog address
  - reference: .properties.syslog_port
    label: Syslog port

property_blueprints:
- name: syslog_address
  type: network_address
  configurable: true
  optional: true
- name: syslog_port
  type: port
  configurable: true
  optional: true

job_types:
- name: broker
  resource_label: Kafka-ODB
  templates:
  - name: broker
    release: on-demand-service-broker-dev1
  - name: syslog-configurator
    release: on-demand-service-broker-dev1
  - name: kafka-service-adapter
    release: kafka-example-service-adapter-dev1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  single_az_only: true
  instance_definition:
    name: instances
    type: integer
    configurable: true
    default: 1
    constraints:
      max: 1
  resource_definitions:
  - name: ram
    type: integer
    configurable: true
    default: 1024
  - name: ephemeral_disk
    type: integer
    configurable: true
    default: 2048
  - name: persistent_disk
    type: integer
    configurable: true
    default: 1024
    constraints:
      min: 1024
  - name: cpu
    type: integer
    configurable: true
    default: 1
  property_blueprints:
  - name: broker_basic_auth
    type: simple_credentials
  - name: plan_name
    type: string
    configurable: true
  - name: plan_id
    type: uuid
  - name: plan_description
    type: string
    configurable: true
  - name: kafka_broker_instances
    type: integer
    configurable: true
    default: 1
  - name: kafka_broker_vm_type
    type: vm_type_dropdown
    configurable: true
  - name: kafka_broker_disk_type
    type: disk_type_dropdown
    configurable: true
  - name: zookeeper_server_instances
    type: integer
    configurable: true
    default: 1
  - name: zookeeper_server_vm_type
    type: vm_type_dropdown
    configurable: true
  - name: zookeeper_server_disk_type
    type: disk_type_dropdown
    configurable: true
  - name: auto_create_topics
    type: boolean
    configurable: true
    default: true
  - name: default_replication_factor
    type: integer
    configurable: true
    default: 1
  manifest: |
    broker:
      port: 8080
      username: (( broker_basic_auth.identity ))
      password: (( broker_basic_auth.password ))
      disable_ssl_cert_verification: true
      bosh:
        url: https://(( $director.deployment_ip )):25555
        authentication:
          uaa:
            url: https://(( $director.deployment_ip )):8443
            client_id: ops_manager  # Hard-coding to avoid service_broker: true and bosh director redeployments
            client_secret: fc426eba901826e48ef8  # Hard-coding to avoid service_broker: true and bosh director redeployments
      service_adapter:
        path: /var/vcap/packages/kafka-service-adapter/bin/service-adapter
      service_deployment:
        releases:
        - name: kafka-service-dev1
          version: 0+dev.2
          jobs: [kafka_broker, zookeeper_server]
        stemcell:
          os: ubuntu-trusty
          version: 3215
      service_catalog:
        id: D94A086D-203D-4966-A6F1-60A9E2300F72
        service_name: kafka-dev1
        service_description: Kafka Service
        bindable: true
        plan_updatable: true
        tags: [kafka]
        plans:
        - name: (( .broker.plan_name.value ))
          plan_id: (( .broker.plan_id.value ))
          description: (( .broker.plan_description.value ))
          instance_groups:
          - name: kafka_broker
            vm_type: (( .broker.kafka_broker_vm_type.value ))
            instances: (( .broker.kafka_broker_instances.value ))
            persistent_disk: (( .broker.kafka_broker_disk_type.value ))
            networks: [kafka-service]  # Hard-coding to avoid service_broker: true and bosh director redeployments
            azs: [698bccdbed8f006a2619]
          - name: zookeeper_server
            vm_type: (( .broker.zookeeper_server_vm_type.value ))
            instances: (( .broker.zookeeper_server_instances.value ))
            persistent_disk: (( .broker.zookeeper_server_disk_type.value ))
            networks: [kafka-service]  # Hard-coding to avoid service_broker: true and bosh director redeployments
            azs: [698bccdbed8f006a2619]
          properties:
            auto_create_topics: (( .broker.auto_create_topics.value ))
            default_replication_factor: (( .broker.default_replication_factor.value ))

- name: zookeeper_node
  resource_label: ZooKeeper Node
  single_az_only: false
  templates:
  - name: zookeeper_node
    release: cf-kafka
  - name: syslog-configurator
    release: cf-kafka

  resource_definitions:
  - name: ram
    type: integer
    configurable: true
    default: 4_096
    constraints:
      min: 4_096

  - name: ephemeral_disk
    type: integer
    configurable: true
    default: 4_096
    constraints:
      min: 4_096

  - name: persistent_disk
    type: integer
    configurable: true
    default: 4_096
    constraints:
      min: 4_096

  - name: cpu
    type: integer
    configurable: true
    default: 1
    constraints:
      min: 1

  static_ip: 1
  dynamic_ip: 0
  max_in_flight: 1

  instance_definition:
    name: instances
    type: integer
    configurable: false
    default: 3
    constraints:
      may_only_increase: true

  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap

  manifest: |
    networks:
      apps: default
    syslog_aggregator:
      address: (( .properties.syslog_address.value ))
      port: (( .properties.syslog_port.value ))
    zookeeper:
      machines: (( .zookeeper_node.ips ))

- name: kafka_broker
  resource_label: Kafka Node
  single_az_only: false
  templates:
  - name: kafka_broker
    release: cf-kafka
  - name: syslog-configurator
    release: cf-kafka

  resource_definitions:
  - name: ram
    type: integer
    configurable: true
    default: 4_096
    constraints:
      min: 4_096

  - name: ephemeral_disk
    type: integer
    configurable: true
    default: 4_096
    constraints:
      min: 4_096

  - name: persistent_disk
    type: integer
    configurable: true
    default: 32_768
    constraints:
      min: 4_096

  - name: cpu
    type: integer
    configurable: true
    default: 2
    constraints:
      min: 2

  static_ip: 1
  dynamic_ip: 0
  max_in_flight: 1

  instance_definition:
    name: instances
    type: integer
    configurable: false
    default: 5
    constraints:
      may_only_increase: true

  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap

  manifest: |
    networks:
      apps: default
    kafka_broker:
      machines: (( .kafka_broker.ips ))
    syslog_aggregator:
      address: (( .properties.syslog_address.value ))
      port: (( .properties.syslog_port.value ))
    zookeeper:
      machines: (( .zookeeper_node.ips ))

- name: push_and_register_service_broker
  resource_label: Broker Registrar
  single_az_only: true
  templates:
  - name: push_and_register_service_broker
    release: cf-kafka
  errand: true

  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 1_024
    constraints:
      min: 1_024

  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 2_048
    constraints:
      min: 1_024

  - name: persistent_disk
    type: integer
    configurable: false
    default: 0

  - name: cpu
    type: integer
    configurable: false
    default: 1
    constraints:
      min: 1

  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1

  instance_definition:
    name: instances
    type: integer
    default: 1

  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap

  manifest: |
    kafka_service_broker:
      kafka:
        port: 9092
        node_ips: (( .kafka_broker.ips ))
      zookeeper:
        port: 2181
        node_ips: (( .zookeeper_node.ips ))
    ssl:
      skip_cert_verify: (( ..cf.ha_proxy.skip_cert_verify.value ))
    cf:
      api_url: (( $runtime.system_api_url ))
      domain: (( $runtime.apps_domain ))
      admin_username: (( ..cf.uaa.admin_credentials.identity ))
      admin_password: (( ..cf.uaa.admin_credentials.password ))

- name: smoke_tests
  resource_label: Smoke Tests
  single_az_only: true
  templates:
  - name: smoke_tests
    release: cf-kafka
  errand: true

  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 1_024
    constraints:
      min: 1_024

  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 2_048
    constraints:
      min: 1_024

  - name: persistent_disk
    type: integer
    configurable: false
    default: 0

  - name: cpu
    type: integer
    configurable: false
    default: 1
    constraints:
      min: 1

  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1

  instance_definition:
    name: instances
    type: integer
    default: 1

  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap

  manifest: |
    ssl:
      skip_cert_verify: (( ..cf.ha_proxy.skip_cert_verify.value ))
    cf:
      api_url: (( $runtime.system_api_url ))
      domain: (( $runtime.apps_domain ))
      admin_username: (( ..cf.uaa.admin_credentials.identity ))
      admin_password: (( ..cf.uaa.admin_credentials.password ))

- name: delete_and_unregister_service_broker
  resource_label: Broker Deregistrar
  single_az_only: true
  templates:
  - name: delete_and_unregister_service_broker
    release: cf-kafka
  errand: true

  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 1_024
    constraints:
      min: 1_024

  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 2_048
    constraints:
      min: 1_024

  - name: persistent_disk
    type: integer
    configurable: false
    default: 0

  - name: cpu
    type: integer
    configurable: false
    default: 1
    constraints:
      min: 1

  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1

  instance_definition:
    name: instances
    type: integer
    default: 1

  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap

  manifest: |
    ssl:
      skip_cert_verify: (( ..cf.ha_proxy.skip_cert_verify.value ))
    cf:
      api_url: (( $runtime.system_api_url ))
      domain: (( $runtime.apps_domain ))
      admin_username: (( ..cf.uaa.admin_credentials.identity ))
      admin_password: (( ..cf.uaa.admin_credentials.password ))
